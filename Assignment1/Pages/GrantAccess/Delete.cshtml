@page
@using System.Data.SqlClient;
@{
    UserAccessMap userAccessMap = new UserAccessMap();
    try
    {
        userAccessMap.user_id = Request.Query["user_id"];
        userAccessMap.access_id = Request.Query["access_id"];

        string connectionString = "Data Source=.\\sqlexpress;Initial Catalog=assignment;Integrated Security=True";
        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            connection.Open();

            String sql = "DELETE FROM UserAccessMap WHERE UserID=@user_id AND UserAccessID=@access_id";
            using (SqlCommand command = new SqlCommand(sql, connection))
            {
                command.Parameters.AddWithValue("@user_id", userAccessMap.user_id);
                command.Parameters.AddWithValue("@access_id", userAccessMap.access_id);

                command.ExecuteNonQuery();
            }
        }
    }
    catch (Exception ex)
    {
        System.Console.WriteLine(ex.Message);
        //TODO: fix delete users foreign key conflict, cascate dalete
    }

    Response.Redirect("/GrantAccess");
}
